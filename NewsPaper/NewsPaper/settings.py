"""
Django settings for NewsPaper project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from django.core.cache import cache
from django.conf import settings
from pathlib import Path
import redis
import logging

logger = logging.getLogger('django')
logger.setLevel(logging.WARNING)


console_handler_warning = logging.StreamHandler()
console_handler_warning.setLevel(logging.WARNING)

console_handler_error = logging.StreamHandler()
console_handler_error.setLevel(logging.ERROR)

formatter = logging.Formatter('%(levelname)s - %(message)s')

console_handler_warning.setFormatter(formatter)
console_handler_error.setFormatter(formatter)

logger.addHandler(console_handler_warning)
logger.addHandler(console_handler_error)

logger.debug('This is a debug message')
logger.info('This is an info message')
logger.warning('This is a warning message')
logger.error('This is an error message')

LOGGING_CONFIG = 'logging.yaml'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'DEBUG',
        },
        'errors_log': {
            'class': 'logging.FileHandler',
            'filename': '/path/to/errors.log',
            'level': 'ERROR',
            'formatter': 'errors_formatter',
        },
        'security_log': {
            'class': 'logging.FileHandler',
            'filename': '/path/to/security.log',
            'level': 'DEBUG',
            'formatter': 'security_formatter',
        },
        'mail_admins': {
            'class': 'django.utils.log.AdminEmailHandler',
            'level': 'ERROR',
            'include_html': True,
            'formatter': 'errors_formatter',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['errors_log', 'mail_admins'],
            'level': 'ERROR',
        },
        'django.server': {
            'handlers': ['errors_log', 'mail_admins'],
            'level': 'ERROR',
        },
        'django.template': {
            'handlers': ['errors_log'],
            'level': 'ERROR',
        },
        'django.db.backends': {
            'handlers': ['errors_log'],
            'level': 'ERROR',
        },
        'django.security': {
            'handlers': ['security_log'],
            'level': 'DEBUG',
        },
    },
    'formatters': {
        'errors_formatter': {
            'format': '{asctime} {levelname}: {message} (Source: {pathname} - {funcName} - {lineno})',
            'style': '{',
        },
        'security_formatter': {
            'format': '{asctime} {levelname}: {module} - {message}',
            'style': '{',
        },
    },
}

ADMINS = [
    ('Megasis', 'icefrost12345@mail.ru'),
]

red = redis.Redis(
    host='redis-14899.c276.us-east-1-2.ec2.cloud.redislabs.com',
    port=14899,
    password='pcuCjsagi3Ln1NOdqT85PUlCYfygoZVz'
)

CELERY_BROKER_URL = 'redis://default:pcuCjsagi3Ln1NOdqT85PUlCYfygoZVz@endpoint:14899'
CELERY_RESULT_BACKEND = 'redis://default:pcuCjsagi3Ln1NOdqT85PUlCYfygoZVz@endpoint:14899'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'


BASE_DIR = Path(__file__).resolve().parent.parent


SECRET_KEY = 'django-insecure-j1zr)5il-m-r45=lor-=o&_p(s0#0149myo2xc+s#=p1u&@!ch'


DEBUG = True

ALLOWED_HOSTS = []



INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'news',
    'accounts',
    'django_filters',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.yandex',
    'django_apscheduler',
]

SCHEDULER_AUTOSTART = True
SCHEDULER_RUN_AT_TIMES = ['18:00']
SCHEDULER_TIMEZONE = 'UTC'
APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"
APSCHEDULER_RUN_NOW = True
APSCHEDULER_SCHEDULER_DEFAULTS = {
    'coalesce': False,
    'max_instances': 1
}
APSCHEDULER_JOBSTORES = {
    'default': {
        'type': 'memory',
    }
}
APSCHEDULER_EXECUTORS = {
    'default': {
        'class': 'apscheduler.executors.pool:ThreadPoolExecutor',
        'max_workers': '20'
    }
}
APSCHEDULER_JOBS = [
    {
        'id': 'send_articles_email',
        'func': 'articles.tasks.send_articles_email',
        'trigger': 'cron',
        'day_of_week': 'fri',
        'hour': 18,
        'minute': 0,
        'replace_existing': True,
        'misfire_grace_time': 3600
    }
]


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'icefrost12345@mail.ru'
EMAIL_HOST_PASSWORD = 'qweqweqwe'
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True

DEFAULT_FROM_EMAIL = 'icefrost12345@mail.ru'

LOGIN_REDIRECT_URL = "/news"

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'none'
ACCOUNT_FORMS = {"signup": "accounts.forms.CustomSignupForm"}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
]

CACHES = {
    'default': {
        'BACKEND': 'django_cache_backend.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:8000',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

CACHE_MIDDLEWARE_ALIAS = 'default'
CACHE_MIDDLEWARE_SECONDS = 300
CACHE_MIDDLEWARE_SECONDS_HOME = 60

CACHE_MIDDLEWARE_SECONDS_NAVIGATION = 10
@register.simple_tag
@cache_for(CACHE_MIDDLEWARE_SECONDS_NAVIGATION)
def navigation():
    return '<nav><ul><li>Link 1</li><li>Link 2</li><li>Link 3</li></ul></nav>'

SITE_ID = 1

ROOT_URLCONF = 'NewsPaper.urls'

import os

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'news/templates/news')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

WSGI_APPLICATION = 'NewsPaper.wsgi.application'




DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}




AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True




STATIC_URL = 'static/'


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


